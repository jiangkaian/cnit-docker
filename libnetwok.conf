                             Docker 1.9以上多主机容器互联的配置方法
Docker 1.9以上支持命”docker network”,容器之间的通信不需要再手动去配置桥接。直接用命令docker network可以创建一个bridge或者overlay。 
具体的配置步骤：
一、操作系统：
   centos 7  内核3.16以上。

二、额外的配置存储服务，例如Consul、Etcd或ZooKeeper所有的节点都能够正常连接到配置存储服务的IP和端口所有节点运行的Docker后台进程需要使用『--cluster-store』和
『--cluster-advertise』参数指定所使用的配置存储服务地址
docker run -d --restart always -p 8500:8500 --hostname consul --name consul index.alauda.cn/sequenceiq/consul:v0.5.0-v6 -server -bootstrap

 三、然后修改每个主机Docker后台进程启动脚本里的『DOCKER_OPTS』变量内容：
--cluster-store=consul://<Consul所在主机IP>:8500  --cluster-advertise=eth1:2376
注：eth1:网卡名称
    
     完了重启docker服务！！

     接下来到了创建Overlay网络的时候，问题来了，我们要建的这个网络是横跨所有节点的，也就是说在每个节点都应该有一个名称、ID和属性完全一致的网络，它们之间还要相互认可对方为自己在不同节点的副本。如何实现这种效果呢？目前的Docker network命令还无法做到，因此只能借助于Swarm。

四、构建swarm集群----------使用token方式搭建
    
1.为了简便起见，我们使用Swarm官方的公有token服务作为节点组网信息的存储位置，首先 
     在任意节点上通过以下命令获取一个token：
#docker create swarm
9efc6aa58eeabf306265623fdee30d3d609c8f1c6e35500effafa1fb5f726b5b
或者下面这样创建也可以：
#docker run –rm swarm create
6856663cdefdec325839a4b7e1de38e8  //生成的token字符串
2.任意选择其中一个节点作为集群的Master节点，并在主机上运行Swarm Master服务:
#docker run -d -p 3375:2375 swarm manage token://<前面获得的token字符串>
3.在其他作为Docker业务容器运行的节点上运行Swarm Agent服务：
# docker run -d swarm join --addr=<当前主机IP>:2375 token://<前面获得的token字符串>
然后查看集群信息：
#docker -H <mast主机ip>:3375 info //查看集群信息
#docker -H <mast主机ip>:3375 images //查看集群中的镜像
这样便获得了一个Swarm的集群。Swarm提供与Docker服务完全兼容的API，因此可以直接使用docker命令进行操作。注意上面命令中创建Master服务时指定的外部端口号3375，它就是用来连接Swarm服务的地址。现在我们就可以创建一个Overlay类型的网络了！！
4.创建一个Overlay类型的网络,名称为ovr0
     #docker network create --driver=overlay ovr0    
     85adeb1ce318c06f3835c091d34f46acedb21b7a04e166d7e5e00a9752862f3f //network ID
   5.查看每个主机下的网络状态------都能看到创建的网络ovr0.说明ovr0可以跨主机通信。
     #docker network ls            
     85adeb1ce318        ovr0                overlay             
     83e20ac81e8c        none                null                
     7adff0c2965b        host                host                     
     6efd587d8dad        bridge              bridge 

  6.在每个主机上创建容器，并且都连在ovr0网络上。
   #docker run -d --name test1 --net=ovr0 cnit/centos:7.1   //主机1
   #docker run -d --name test2 --net=ovr0 cnit/centos:7.1   //主机2
   #docker run -d --name test3 --net=ovr0 cnit/centos:7.1   //主机3

 7.测试跨主机间的容器互联------互相ping一下各主机下的容器
   #docker exec test1 ping test2     //能ping通
   #docker exec test1 ping test3     //能ping通
 #docker exec test1 ping www.baidu.com     //外网也能ping通

 到此，已经完成了容器跨主机间的访问，同时也能访问外部网络。

以上是使用token方式搭建swarm集群，下面还有一种方法大家swarm集群。
               使用文件搭建swarm集群的方法
一、选定一台主机作为管理主机，创建一个集群信息的文件。如cluster.把需要集群
的主机的ip写入cluster文件中。
#echo 10.255.1.11:2375 >> cluster   ---------这台为集群管理主机
#echo 10.255.1.12:2375 >> cluster
#echo 10.255.1.116:2375 >> cluster
二、在集群管理主机上执行swarm manage命令创建集群
    #docker run -d -p 3375:2375 -v $(pwd)/cluster:/tmp/cluster swarm manage file:///tmp/cluster
    注意：这里一定要使用-v命令，因为cluster文件是在本机上面，启动的容器默认是访问不到的，所以要通过-v命令共享。还有，file:///千万不能忘记了。
可以看到，swarm已经运行起来了。现在可以查看下集群节点信息了
